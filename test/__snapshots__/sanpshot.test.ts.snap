// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SSG creates stack non production 1`] = `
Object {
  "Description": "test description",
  "Mappings": Object {
    "AWSCloudFrontPartitionHostedZoneIdMap": Object {
      "aws": Object {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": Object {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Outputs": Object {
    "bucket": Object {
      "Value": Object {
        "Ref": "examplestacks3bucket5F48481E",
      },
    },
    "certificate": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "ExampleStackCertificateCertificateRequestorResourceBC6AAED4",
          "Arn",
        ],
      },
    },
    "distro": Object {
      "Value": Object {
        "Ref": "ExampleStackDistributionCD5473E4",
      },
    },
    "function": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "ExampleStackFunctionArnReader449EEA85",
          "FunctionArn",
        ],
      },
    },
    "functionversion": Object {
      "Value": Object {
        "Fn::Select": Array [
          7,
          Object {
            "Fn::Split": Array [
              ":",
              Object {
                "Fn::GetAtt": Array [
                  "ExampleStackFunctionArnReader449EEA85",
                  "FunctionArn",
                ],
              },
            ],
          },
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241ArtifactHash1B3D1B80": Object {
      "Description": "Artifact hash for asset \\"45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241\\"",
      "Type": "String",
    },
    "AssetParameters45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241S3BucketF1BC72A7": Object {
      "Description": "S3 bucket for asset \\"45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241\\"",
      "Type": "String",
    },
    "AssetParameters45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241S3VersionKey7AD83AC7": Object {
      "Description": "S3 key for asset version \\"45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241\\"",
      "Type": "String",
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392ArtifactHashE56CD69A": Object {
      "Description": "Artifact hash for asset \\"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\\"",
      "Type": "String",
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F": Object {
      "Description": "S3 bucket for asset \\"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\\"",
      "Type": "String",
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626": Object {
      "Description": "S3 key for asset version \\"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\\"",
      "Type": "String",
    },
    "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4ArtifactHash5E28809B": Object {
      "Description": "Artifact hash for asset \\"7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4\\"",
      "Type": "String",
    },
    "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3Bucket5BEBDCBE": Object {
      "Description": "S3 bucket for asset \\"7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4\\"",
      "Type": "String",
    },
    "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC": Object {
      "Description": "S3 key for asset version \\"7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CustomCrossRegionStringParameterReaderCustomResourceProviderHandler65B5F33A": Object {
      "DependsOn": Array [
        "CustomCrossRegionStringParameterReaderCustomResourceProviderRole71CD6825",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241S3BucketF1BC72A7",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241S3VersionKey7AD83AC7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241S3VersionKey7AD83AC7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCrossRegionStringParameterReaderCustomResourceProviderRole71CD6825",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCrossRegionStringParameterReaderCustomResourceProviderRole71CD6825": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "ssm:GetParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:us-east-1:testaccount1:parameter/cdk/EdgeFunctionArn/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "examplestacks3bucket5F48481E",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExampleStackCertificateCertificateRequestorFunction7908BA74": Object {
      "DependsOn": Array [
        "ExampleStackCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy3BB396B3",
        "ExampleStackCertificateCertificateRequestorFunctionServiceRole793BBCCE",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3Bucket5BEBDCBE",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ExampleStackCertificateCertificateRequestorFunctionServiceRole793BBCCE",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExampleStackCertificateCertificateRequestorFunctionServiceRole793BBCCE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExampleStackCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy3BB396B3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/DUMMY",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ExampleStackCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy3BB396B3",
        "Roles": Array [
          Object {
            "Ref": "ExampleStackCertificateCertificateRequestorFunctionServiceRole793BBCCE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ExampleStackCertificateCertificateRequestorResourceBC6AAED4": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "example.com",
        "HostedZoneId": "DUMMY",
        "Region": "us-east-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "ExampleStackCertificateCertificateRequestorFunction7908BA74",
            "Arn",
          ],
        },
        "SubjectAlternativeNames": Array [
          "*.example.com",
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ExampleStackDistributionCD5473E4": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "stage.example.com",
          ],
          "DefaultCacheBehavior": Object {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "LambdaFunctionAssociations": Array [
              Object {
                "EventType": "origin-request",
                "LambdaFunctionARN": Object {
                  "Fn::GetAtt": Array [
                    "ExampleStackFunctionArnReader449EEA85",
                    "FunctionArn",
                  ],
                },
              },
            ],
            "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
            "TargetOriginId": "MyTestStackExampleStackDistributionOrigin122553438",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "examplestacks3bucket5F48481E",
                  "RegionalDomainName",
                ],
              },
              "Id": "MyTestStackExampleStackDistributionOrigin122553438",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "ExampleStackDistributionOrigin1S3Origin34B42B0B",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "ExampleStackCertificateCertificateRequestorResourceBC6AAED4",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2019",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "ExampleStackDistributionOrigin1S3Origin34B42B0B": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Identity for MyTestStackExampleStackDistributionOrigin122553438",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "ExampleStackFunctionArnReader449EEA85": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ParameterName": "/cdk/EdgeFunctionArn/eu-west-1/MyTestStack/ExampleStackFunction",
        "RefreshToken": "ExampleStackFunctionCurrentVersion8B318B736d061d09a9a9bf1559bbb32800fc3cf7",
        "Region": "us-east-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCrossRegionStringParameterReaderCustomResourceProviderHandler65B5F33A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::CrossRegionStringParameterReader",
      "UpdateReplacePolicy": "Delete",
    },
    "ExampleStackRoute53ARecordFromDistribution4FAFD904": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "ExampleStackDistributionCD5473E4",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "stage.example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "examplestacks3bucket5F48481E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketName": "examplestacks3bucket",
        "CorsConfiguration": Object {
          "CorsRules": Array [
            Object {
              "AllowedMethods": Array [
                "GET",
              ],
              "AllowedOrigins": Array [
                "stage.example.com",
              ],
            },
          ],
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "examplestacks3bucketAutoDeleteObjectsCustomResource3AA0961D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "examplestacks3bucketPolicyC7E605EA",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "examplestacks3bucket5F48481E",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "examplestacks3bucketPolicyC7E605EA": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "examplestacks3bucket5F48481E",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "examplestacks3bucket5F48481E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "examplestacks3bucket5F48481E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "examplestacks3bucket5F48481E",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "examplestacks3bucket5F48481E",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "ExampleStackDistributionOrigin1S3Origin34B42B0B",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "examplestacks3bucket5F48481E",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
}
`;

exports[`SSG creates stack production 1`] = `
Object {
  "Description": "test prod description",
  "Mappings": Object {
    "AWSCloudFrontPartitionHostedZoneIdMap": Object {
      "aws": Object {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": Object {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Outputs": Object {
    "bucket": Object {
      "Value": Object {
        "Ref": "examplestackproductions3bucketE722C2DB",
      },
    },
    "certificate": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "ExampleStackProductionCertificateCertificateRequestorResource9BA29043",
          "Arn",
        ],
      },
    },
    "distro": Object {
      "Value": Object {
        "Ref": "ExampleStackProductionDistributionCEFB3971",
      },
    },
    "function": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "ExampleStackProductionFunctionArnReader1EC11C11",
          "FunctionArn",
        ],
      },
    },
    "functionversion": Object {
      "Value": Object {
        "Fn::Select": Array [
          7,
          Object {
            "Fn::Split": Array [
              ":",
              Object {
                "Fn::GetAtt": Array [
                  "ExampleStackProductionFunctionArnReader1EC11C11",
                  "FunctionArn",
                ],
              },
            ],
          },
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241ArtifactHash1B3D1B80": Object {
      "Description": "Artifact hash for asset \\"45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241\\"",
      "Type": "String",
    },
    "AssetParameters45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241S3BucketF1BC72A7": Object {
      "Description": "S3 bucket for asset \\"45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241\\"",
      "Type": "String",
    },
    "AssetParameters45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241S3VersionKey7AD83AC7": Object {
      "Description": "S3 key for asset version \\"45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241\\"",
      "Type": "String",
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392ArtifactHashE56CD69A": Object {
      "Description": "Artifact hash for asset \\"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\\"",
      "Type": "String",
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F": Object {
      "Description": "S3 bucket for asset \\"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\\"",
      "Type": "String",
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626": Object {
      "Description": "S3 key for asset version \\"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\\"",
      "Type": "String",
    },
    "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4ArtifactHash5E28809B": Object {
      "Description": "Artifact hash for asset \\"7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4\\"",
      "Type": "String",
    },
    "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3Bucket5BEBDCBE": Object {
      "Description": "S3 bucket for asset \\"7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4\\"",
      "Type": "String",
    },
    "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC": Object {
      "Description": "S3 key for asset version \\"7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CustomCrossRegionStringParameterReaderCustomResourceProviderHandler65B5F33A": Object {
      "DependsOn": Array [
        "CustomCrossRegionStringParameterReaderCustomResourceProviderRole71CD6825",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241S3BucketF1BC72A7",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241S3VersionKey7AD83AC7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters45b7ed524ce2b119dd4f2b8642ae8bfaf0df45bc6bd705072ae4ee6d1a999241S3VersionKey7AD83AC7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCrossRegionStringParameterReaderCustomResourceProviderRole71CD6825",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCrossRegionStringParameterReaderCustomResourceProviderRole71CD6825": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "ssm:GetParameter",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:us-east-1:testaccount1:parameter/cdk/EdgeFunctionArn/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "examplestackproductions3bucketE722C2DB",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExampleStackProductionCertificateCertificateRequestorFunction6879A552": Object {
      "DependsOn": Array [
        "ExampleStackProductionCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyF7C2DDBD",
        "ExampleStackProductionCertificateCertificateRequestorFunctionServiceRole4469EE0A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3Bucket5BEBDCBE",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters7af6295e521fd55af94332393ceffb3e866aac4dc4956321f7918f21e72199e4S3VersionKey326451BC",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ExampleStackProductionCertificateCertificateRequestorFunctionServiceRole4469EE0A",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ExampleStackProductionCertificateCertificateRequestorFunctionServiceRole4469EE0A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ExampleStackProductionCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyF7C2DDBD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/DUMMY",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ExampleStackProductionCertificateCertificateRequestorFunctionServiceRoleDefaultPolicyF7C2DDBD",
        "Roles": Array [
          Object {
            "Ref": "ExampleStackProductionCertificateCertificateRequestorFunctionServiceRole4469EE0A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ExampleStackProductionCertificateCertificateRequestorResource9BA29043": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "example.com",
        "HostedZoneId": "DUMMY",
        "Region": "us-east-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "ExampleStackProductionCertificateCertificateRequestorFunction6879A552",
            "Arn",
          ],
        },
        "SubjectAlternativeNames": Array [
          "*.example.com",
        ],
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ExampleStackProductionDistributionCEFB3971": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "prod.example.com",
            "www.example.com",
            "example.com",
          ],
          "DefaultCacheBehavior": Object {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "LambdaFunctionAssociations": Array [
              Object {
                "EventType": "origin-request",
                "LambdaFunctionARN": Object {
                  "Fn::GetAtt": Array [
                    "ExampleStackProductionFunctionArnReader1EC11C11",
                    "FunctionArn",
                  ],
                },
              },
            ],
            "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
            "TargetOriginId": "MyTestStackExampleStackProductionDistributionOrigin1E5850988",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "examplestackproductions3bucketE722C2DB",
                  "RegionalDomainName",
                ],
              },
              "Id": "MyTestStackExampleStackProductionDistributionOrigin1E5850988",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "ExampleStackProductionDistributionOrigin1S3Origin7934DC53",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "ExampleStackProductionCertificateCertificateRequestorResource9BA29043",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2019",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "ExampleStackProductionDistributionOrigin1S3Origin7934DC53": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Identity for MyTestStackExampleStackProductionDistributionOrigin1E5850988",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "ExampleStackProductionFunctionArnReader1EC11C11": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ParameterName": "/cdk/EdgeFunctionArn/eu-west-1/MyTestStack/ExampleStackProductionFunction",
        "RefreshToken": "ExampleStackProductionFunctionCurrentVersion318F18AE5bc122b3fd7c36f6fb05c9911670ebc2",
        "Region": "us-east-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCrossRegionStringParameterReaderCustomResourceProviderHandler65B5F33A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::CrossRegionStringParameterReader",
      "UpdateReplacePolicy": "Delete",
    },
    "ExampleStackProductionRoute53ARecordFromDistributionE7C6AD6E": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "ExampleStackProductionDistributionCEFB3971",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "prod.example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "examplestackproductions3bucketAutoDeleteObjectsCustomResourceDCBE3195": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "examplestackproductions3bucketPolicyBA5F019E",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "examplestackproductions3bucketE722C2DB",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "examplestackproductions3bucketE722C2DB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketName": "examplestackproductions3bucket",
        "CorsConfiguration": Object {
          "CorsRules": Array [
            Object {
              "AllowedMethods": Array [
                "GET",
              ],
              "AllowedOrigins": Array [
                "prod.example.com",
                "www.example.com",
                "example.com",
              ],
            },
          ],
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "examplestackproductions3bucketPolicyBA5F019E": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "examplestackproductions3bucketE722C2DB",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "examplestackproductions3bucketE722C2DB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "examplestackproductions3bucketE722C2DB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "examplestackproductions3bucketE722C2DB",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "examplestackproductions3bucketE722C2DB",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "ExampleStackProductionDistributionOrigin1S3Origin7934DC53",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "examplestackproductions3bucketE722C2DB",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
}
`;
